<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.0.25">
  <POU Name="README" Id="{9e709af8-2444-4665-af91-42fef398c7c9}">
    <Declaration><![CDATA[PROGRAM README
VAR
	sVersion: STRING:='0.9.0';
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[(*

The EpicsComModule is used to communicate between EPICS and a TwinCAT 3 PLC (Beckhoff). The communication between epics and this module is based on TCP/IP (Stream device is used on the EPICS-side). Internal communication between this module and other modules (other plc-modules, motion-module, or I/O) are based on ADS communication. 
The EpicsComModule currently utilizes the Beckhoff TCP/IP server framework. Therefore the TCP/IP server software needs to be installed on the controller to be used. A licence for the TCP/IP server must be activated if it should run more than 7-days continiuosly (like all TwinCat licenses). 
Note: No lcence is needed to test for 7 days (test period will autamaticcaly be renewed to 7 more days each time the project is downloaded)

Quick start guide: 
0: Read the manual
1: Add the EpicsComModule to your project (easiest way is to use add existing item (right click on PLC in treeview)). Or use git			
2: Compile and download:
3: Configure records in EPICS (Using steram device) to output strings in the following format:
	Read a varaible: "Main.iCounter?;
"
	Write a variable: "Main.iCounter=10;
"								
The default internal ADS adress is 851 which corresponds to the first PLC-module (Main.iCounter in PLC module 851 will be accessed). For accessing other ADS-modules please refer to documentation.

Most native types and arrays of native types are supported (also some structs).								


******* Other functionallity **********

****Options (options are defined by an ending '/'):
"ADSPORT=xxx/Command;" Will apply a ADS-port to an command. This ADS port will only be used for the command stated after the option. The default ADS-port will be unchanged
example:
	"ADSPORT=852/Main.iCounter?;"	Will access Main.iCounter on ADS port 852. 
 
****Commands (Commands are identified by an '.' located at the first byte in the command string):
".THIS.XXXXXX;" Will allow access to variables in the current communication object. (since the client don't know which to connection object in the array it's connected to ) 
example:
".THIS.stSettings.nADSPORT=852;" will change the default ADS-port to 852.  .THIS will simply replace  the path to the communication object with the correct connection index (x):
".THIS.stSettings.nADSPORT=852;" = "Main.fbServer.aApplications[x].stSettings.nADSPORT=852;"
example 2:
".THIS.stSettings.nConnectionIndex?;" will retrun the connection index for the current connection. 


".ADR.IDXGRP,IDXOFF,size,adst_type;". The ADR command allows reading and writing to variables with absoulte adress
example: Access softlimits of axis 1 in motion (NC). Adresses can be find in documentation on by hovering over the parameter in NC (tool tip) or by right clicking on the parameter of intrest and choosing properties. NC has ADSPort 501 
Writing: "ADSPORT=501/.ADR.16#5001,16#D,8,5=-100;" 
Reading: "ADSPORT=501/.ADR.16#5001,16#D,8,5?;"
Note: Axis 2 can be accessed in the same way by increasing the IDXGRP to 5002  (axis 3=> 5003)
 
example 2: Reading the absoute adress of an variable with symbolic adress

"ADSPORT=852/.ADR.Main.sVersion?; Will return the absolute adress of the variable Main.sVersion at ADS-port 852.

*)]]></ST>
    </Implementation>
    <ObjectProperties />
  </POU>
</TcPlcObject>